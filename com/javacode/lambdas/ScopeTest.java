package com.javacode.lambdas;

import java.util.function.Consumer;

public class ScopeTest {
    // мы создали класс и в нем поле типа double с названием d
    double d = 0.123;
    // и создали внутренний класс с таким же полем и с таким же названием
    // в этом классе мы будем реализовывать лямбда-выражение
    class LambdaScopeInner {
        double d = 456.123;
        // теперь определим метод с лямбда-выражением котроый принимает параметром
        // все тот же тип и у которого все то же название
        void testScope(double d) {
            // здесь мы воспользуемся стандартным интерфейсом java чтобы определить
            // лямбда-выражение, до этого мы писали свои интерфейсы, но в java
            // есть уже готовые решения, с ними мы познакомимся позже
            Consumer<Double> result = e->{
                // здесь мы получаем доступ к аргументу нашего метода
                System.out.println("d ="+d);
                // здесь мы получаем доступ к полю внутреннего класса
                System.out.println("Inner d ="+this.d);
                // здесь мы получаем доступ к полю внешнего класса
                // так же с помощью ключевого слова this, но с указанием
                // к какому классу принадлежит это поле
                System.out.println("Outer d ="+ScopeTest.this.d);
                // а это параметр нашей лямбды
                System.out.println("Consumer e ="+e);
            };
            // в конце вызываем нашу лямбду
            result.accept(789.00);
            // goTo LambdaExample 78
        }
    }

}
