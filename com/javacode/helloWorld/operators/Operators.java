package com.javacode.helloWorld.operators;

public class Operators {

    public static void main(String[] args) {

        int a = 10;
        int b = 3;

        // Стандартные математические операторы
        int c = a + b;
        int d = a - b;
        int e = a * b;
        float f = (float) a / b;  // поскольку значения которые
        // мы делим, типа int,
        // то и результат тоже будет типом int, чтобы получить правильный
        // ответ нужно привести значения к типу float или double
        int g = a % b; // остаток от деления

//        System.out.println("c = " + c);
//        System.out.println("d = " + d);
//        System.out.println("e = " + e);
//        System.out.println("f = " + f);
//        System.out.println("g = " + g);

        /*Инкрементирование и декрементирование*/

        // Операции инкрементирования и декрементирования
        // записываютс яподобным образом

        double n = 7;
//        System.out.println(n++); // здесь с помощью инкрементирования
//        // мы добавили 1 к переменной
//        System.out.println(n--); // а здесь отнимаем
//        // такой инкремент называется постфиксным, бывает еще и
//        // префиксный, записывается так:
//        System.out.println(--n);
        // постфиксный инкремент вычисляется уже после какого то выражения
        // а префиксный перед всеми остальными вычислениями
        double n1 = 7;
        double m1 = 7;
//        System.out.println(2 * n1++); // 14, что кстати странно,
//        // по идее должно быть 15, ну соответственно в данном случае
//        // инкрементирование бесполезно
//        System.out.println(2 * ++m1); // 16


        /*Операторы сравнения*/

        // Операторы сравнения выводом дают тип boolean

        int x = 3;
        int y = 5;
        int z = 8;

        boolean boolVal = x != y; // вывод true

        // в java так же есть логические операторы && - и, || - или

        boolean boolVal2 = y < z && z > x; // вывод true
        boolean boolVal3 = y > z || z > x; // вывод true,
        // так как одно из условий истина

        int res = x < y ? x : y; // тернарный оператор "?:"
        // левее знака ? находится вычисляемая часть, правее через :
        // пишутся возможные варианты вывода, если вычисляемая часть true
        // то возвращается значение слева от :, если false то возвращается
        // значение справа от :


    }
}
